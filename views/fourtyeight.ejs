<% include partials/header %> 

<h2 class="ui block header">
  <i class="plug icon"></i>
  <div class="content">
   GB Electricity Generation - Past 48 Hours
  </div>
</h2>

<!--maincontent-->
<div class="ui equal width center aligned padded stackable grid">
    <div class="row">
        <div class="sixteen wide computer column">
            <div class="ui raised segments">
                <div class="ui secondary segment heading">
                    <h3 class="ui header">Half-hourly Generation from <%=timeFrom%> until <%=timeTo%></h3>
                </div>
                <div class="ui segment">
                    <div class= "ui grid">
                        <div class="ui stretched row">
                            <div class="sixteen wide computer column canvas-container">
                                <div class="ui basic segment">
                                    <canvas id="lineChart48"></canvas>
                                </div>
                            </div>
                            
                        </div>
                    </div>
                </div>
                <div class="ui secondary segment info">
                      <i class="large info circle icon infopop" data-position="right center" data-variation="inverted" data-title="Half-hourly Generation from <%=timeFrom%> until <%=timeTo%>" data-content="Generation figures over the past 48 hours, the cumulative counters show the total generation in GWh during this period, along with figures broken down into generation type (fossil fuels, renewables and low carbon). Nuclear, biomass and imported generation provide a steady baseload of energy with gas and coal being adjusted around intermittent renewable energy, in order to meet demand."></i>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="four wide computer eight wide tablet sixteen wide mobile column">
            <div class="ui raised segments">
                <div class="ui segment mini-stat-box">
                    <div class="ui small red statistic">
                        <div class="value" id="counter1"></div>
                        <div class="label">
                            Cumulative Total 
                        </div>
                    </div>
                    <br>
                    <div class="ui small red statistic">
                        <div class="value" id="counter8"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="four wide computer eight wide tablet sixteen wide mobile column">
            <div class="ui raised segments">
                <div class="ui segment mini-stat-box">
                    <div class="ui small blue statistic">
                        <div class="value" id="counter2"></div>
                        <div class="label">
                            Cumulative Fossil Fuels
                        </div>
                    </div>
                    <br>
                    <div class="ui small blue statistic">
                        <div class="value" id="counter5"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="four wide computer eight wide tablet sixteen wide mobile column">
            <div class="ui raised segments">
                <div class="ui segment mini-stat-box">
                    <div class="ui small green statistic">
                        <div class="value" id="counter3"></div>
                        <div class="label">
                            Cumulative Renewables
                        </div>
                    </div>
                    <br>
                    <div class="ui small green statistic">
                        <div class="value" id="counter6"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="four wide computer eight wide tablet sixteen wide mobile column">
            <div class="ui raised segments">
                <div class="ui segment mini-stat-box">
                    <div class="ui small purple statistic">
                        <div class="value" id="counter4"></div>
                        <div class="label">
                            Cumulative Low Carbon
                        </div>
                    </div>
                    <br>
                    <div class="ui small purple statistic">
                        <div class="value" id="counter7"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
            
        
        
<script>


// information popup activation 
$('.infopop').popup({
    inline     : true,
    hoverable  : true,
    delay: {
      show: 100,
      hide: 400
    }
  });

// countUp animation options
const countOptions2 = {
    useEasing: true, 
    useGrouping: true, 
    separator: ',', 
    decimal: '.',
    suffix: ' GWh'
};

const countOptions1 = {
    useEasing: true, 
    useGrouping: true, 
    decimal: '.',
    suffix: ' %'
};

// countUp animation 
const count1 = new CountUp('counter1', 0, ((<%=totalMwhEmbedded%>).toFixed(1)), 1, 3, countOptions2);
    if (!count1.error) {
    count1.start();
    } else {
    console.error(count1.error);
}

const count2 = new CountUp('counter2', 0, ((<%=totalFossil48%>).toFixed(1)), 1, 3, countOptions2);
    if (!count2.error) {
    count2.start();
    } else {
    console.error(count2.error);
}

const count3 = new CountUp('counter3', 0, ((<%=renewTotalCumul%>).toFixed(1)), 1, 3, countOptions2);
    if (!count3.error) {
    count3.start();
    } else {
    console.error(count3.error);
}

const count4 = new CountUp('counter4', 0, ((<%=totalLowc48%>).toFixed(1)), 1, 3, countOptions2);
    if (!count4.error) {
    count4.start();
    } else {
    console.error(count4.error);
}

const count5 = new CountUp('counter5', 0, (Math.floor(((<%=totalFossil48%>)/(<%=totalMwhEmbedded%>))*100)+0.5).toFixed(1), 1, 3, countOptions1);
    if (!count5.error) {
    count5.start();
    } else {
    console.error(count5.error);
}

const count6 = new CountUp('counter6', 0, (Math.floor(((<%=renewTotalCumul%>)/(<%=totalMwhEmbedded%>))*100)+0.5).toFixed(1), 1, 3, countOptions1);
    if (!count6.error) {
    count6.start();
    } else {
    console.error(count6.error);
}

const count7 = new CountUp('counter7', 0, (Math.floor(((<%=totalLowc48%>)/(<%=totalMwhEmbedded%>))*100)+0.5).toFixed(1), 1, 3, countOptions1);
    if (!count7.error) {
    count7.start();
    } else {
    console.error(count7.error);
}

const count8 = new CountUp('counter8', 0, 100, 1, 3, countOptions1);
    if (!count8.error) {
    count8.start();
    } else {
    console.error(count8.error);
}

// chart.js 
const ctx = document.getElementById("lineChart48");

// 48hr Half-hourly and Total Generation - line chart data
const data1 = {
    labels: [<%= timePeriod %>],
    datasets: [{
        fill: true,
        label: 'Gas',
        data: [<%=ccgt%>],
        backgroundColor: 'rgba(55,150,201,1)',
        borderColor: 'rgba(55,150,201,1)',
        borderWidth: 4
      }, {
        fill: true,
        label: 'Coal',
        data: [<%=coal%>],
        backgroundColor: 'rgba(200,87,83,1)',
        borderColor: 'rgba(200,87,83,1)',
        borderWidth: 4
      },  {
        fill: true,
        label: 'Nuclear',
        data: [<%=nuclear%>],
        backgroundColor: 'rgba(145,95,158,1)',
        borderColor: 'rgba(145,95,158,1)',
        borderWidth: 4
      },  {
        fill: true,
        label: 'Wind (incl embedded)',
        data: [<%=embeddedWind48%>],
        backgroundColor: 'rgba(37,186,161,1)',
        borderColor: 'rgba(37,186,161,1)',
        borderWidth: 4
      }, {
        fill: true,
        label: 'Biomass',
        data: [<%=biomass%>],
        backgroundColor: 'rgba(234,195,186,1)',
        borderColor: 'rgba(234,195,186,1)',
        borderWidth: 5
      },  {
        fill: true,
        label: 'Imports',
        data: [<%=ics%>],
        backgroundColor: 'rgba(199,202,141,1)',
        borderColor: 'rgba(199,202,141,1)',
        borderWidth: 4
      },  {
        fill: true,
        label: 'Hydro',
        data: [<%=hydro%>],
        backgroundColor: 'rgba(149,159,176,1)',
        borderColor: 'rgba(149,159,176,1)',
        borderWidth: 4
      },  {
        fill: true,
        label: 'Solar',
        data: [<%=arraySolar48%>],
        backgroundColor: 'rgba(252,179,111,1)',
        borderColor: 'rgba(252,179,111,1)',
        borderWidth: 4
      }
    ]
}


// line chart data options
const line1 = {
  tooltips: {
        mode: 'index',
        intersect: false,
        position: "nearest"
    },
    elements: {
        point:{
        radius: 0
        }
    },
    legend: {
        display: true
    },
    responsive: true,
    maintainAspectRatio: false,
    scales: {
         xAxes: [{
             distribution: 'series',
             scaleLabel: {
                display: true,
                labelString: 'Half Hourly Period'
             },
             gridLines: {
                 display: false
             }
            //  type: "time",
            //  time: {
            //      unit: "minute",
            //      parser: "MMM Do HH:mmA"
            //     //  displayFormats: {
            //     //         'minute': "MMM Do HH:mmA"
            //     //     }
            //  }
      }],
        yAxes: [{
            stacked: true,
            ticks: {
                beginAtZero:false
            },
            scaleLabel: {
                display: true,
                labelString: 'Generation - Gigawatts (GW)'
            }
            
        }]
    }
}

const lineChart48 = new Chart(ctx, {
    data: data1,
    type: 'line',
    options: line1
});

// page refresh every 30 mins
setTimeout(() => {
    location.reload();
    },300000)



</script>

<!--maincontent-->

<% include partials/footer %>











